{"version":3,"sources":["../../src/components/InputText/InputText.js","../../src/components/Lov/Lov.js","../../src/components/Number/Number.js","../../src/index.js","App.js","index.js"],"names":["InputText","props","type","fullWidth","label","margin","name","value","variant","onChange","Lov","id","key","item","Number","EditableGrid","aria-label","size","index","lineItems","formData","deleteHandler","changeHandler","justify","container","spacing","color","onClick","addHandler","DynamicEditableForm","data","keyIndex","lovData","DeleteAction","title","component","App","React","Component","state","firstName","lastName","age","gender","handleAddLineItem","this","setState","concat","handleLineItemChange","elementIndex","event","console","log","target","map","i","handleRemoveLineItem","filter","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.324fb933.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\n/**\r\n * @author Palmurugan C\r\n *\r\n * Dynamic Text component\r\n *\r\n * Stateless component\r\n */\r\nconst InputText = (props) => {\r\n    return (\r\n        <TextField type=\"text\" fullWidth label={props.label}\r\n            margin=\"dense\" name={props.name} value={props.value} variant=\"outlined\" onChange={props.changeHandler(props.keyIndex)} />\r\n    );\r\n}\r\n\r\nexport default InputText;","import React from 'react';\r\n\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\n\r\n/**\r\n * @author Palmurugan C\r\n *\r\n * Dynamic LOV component - Accepting static values\r\n *\r\n * Stateless component\r\n */\r\nconst Lov = (props) => {\r\n    return (\r\n        <FormControl fullWidth margin=\"dense\" variant=\"outlined\">\r\n            <InputLabel id={props.name}>{props.label}</InputLabel>\r\n            <Select id={props.name} name={props.name} value={props.value} label={props.label} variant=\"outlined\" onChange={props.changeHandler(props.keyIndex)}>\r\n                {props.lovData.map((item) => (\r\n                    <MenuItem key={item.id} value={item.key}>{item.value}</MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default Lov;","import React from 'react';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\n/**\r\n * @author Palmurugan C\r\n * \r\n * Dynamic Number component\r\n * \r\n * Stateless component\r\n */\r\nconst Number = (props) => {\r\n    return (\r\n        <TextField type=\"number\" fullWidth label={props.label}\r\n            margin=\"dense\" name={props.name} value={props.value} variant=\"outlined\" onChange={props.changeHandler(props.keyIndex)} />\r\n    );\r\n}\r\n\r\nexport default Number;","import React from 'react'\nimport {\n  Grid, Table, TableBody, TableContainer,\n  TableHead, TableRow, TableCell, Button, Tooltip, IconButton\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { InputText, Lov, Number } from './components';\n\n/**\n * @author Palmurugan C\n * \n * The main class for Editable Grid\n */\nexport const EditableGrid = (props) => {\n  return (\n    <div><Grid>\n      <TableContainer>\n        <Table aria-label=\"simple table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              {props.formData.map((item, index) => (\n                <TableCell key={index}>{item.label}</TableCell>\n              ))}\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <DynamicEditableForm lineItems={props.lineItems} formData={props.formData}\n            deleteHandler={props.deleteHandler} changeHandler={props.changeHandler} />\n        </Table>\n      </TableContainer>\n    </Grid>\n      <Grid justify=\"flex-end\" container spacing={24}>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.addHandler}> Add </Button>\n      </Grid>\n    </div >\n  );\n}\n\n/**\n * Dynamic form generation component\n * \n * @param {lineItems, formData} props \n */\nconst DynamicEditableForm = (props) => {\n  return (\n    <TableBody>\n      {props.lineItems.map((item, mainIndex) => (\n        <TableRow>\n          {props.formData.map((data, index) => (\n            <TableCell>\n              {data.component === 'inputText' ? <InputText keyIndex={mainIndex} name={data.name} value={item[data.name]} label={data.label}\n                changeHandler={props.changeHandler} /> : null}\n              {data.component === 'lov' ? <Lov keyIndex={mainIndex} name={data.name} value={item[data.name]} label={data.label}\n                changeHandler={props.changeHandler} lovData={data.lovData} /> : null}\n              {data.component === 'number' ? <Number keyIndex={mainIndex} name={data.name} value={item[data.name]} label={data.label}\n                changeHandler={props.changeHandler} lovData={data.lovData} /> : null}\n            </TableCell>\n          ))}\n          <DeleteAction deleteHandler={props.deleteHandler(mainIndex)} />\n        </TableRow>\n      ))}\n    </TableBody>\n  );\n}\n\n/**\n * Stateless component for delete action\n */\nconst DeleteAction = (props) => {\n  return (\n    <TableCell>\n      <Tooltip title=\"Delete\">\n        <IconButton size=\"small\" aria-label=\"Delete\">\n          <DeleteIcon onClick={props.deleteHandler} />\n        </IconButton>\n      </Tooltip>\n    </TableCell>\n  );\n}","import React from 'react'\n\nimport { EditableGrid } from 'editable-grid'\nimport 'editable-grid/dist/index.css'\n\nconst formData = [\n  { name: \"firstName\", label: \"First Name\", component: \"inputText\" },\n  { name: \"lastName\", label: \"LastName\", component: \"inputText\" },\n  { name: \"age\", label: \"Age\", component: \"number\" },\n  {\n    name: \"gender\", label: \"Gender\", component: \"lov\", lovData:\n      [{ id: 1, key: \"M\", value: \"Male\" }, { id: 1, key: \"F\", value: \"FeMale\" }]\n  }\n]\n\n/**\n * @author Palmurugan C\n * \n * Example project to explain how to use editable-grid component\n */\nclass App extends React.Component {\n\n  state = {\n    lineItems: [\n      { firstName: 'Pal', lastName: 'Murugan', age: 0, gender: 'M' },\n    ]\n  }\n\n  /**\n   * The handler to add new items. \n   * \n   * This will add new items in the state.\n   */\n  handleAddLineItem = () => {\n    this.setState({\n      lineItems: this.state.lineItems.concat(\n        [{ firstName: '', lastName: '', age: 0, gender: '' }]\n      )\n    })\n  }\n\n  /**\n   * The handler to update the state values.\n   * \n   * This function will invoke for each changes in the components\n   */\n  handleLineItemChange = (elementIndex) => (event) => {\n    console.log(event.target.name, elementIndex);\n    let lineItems = this.state.lineItems.map((item, i) => {\n      if (elementIndex !== i) {\n        return item\n      } else {\n        return { ...item, [event.target.name]: event.target.value }\n      }\n    })\n    this.setState({ lineItems });\n  }\n\n  /**\n   * The handler for remove items\n   * \n   * This function will remove item from state and update the components\n   */\n  handleRemoveLineItem = (elementIndex) => (event) => {\n    this.setState({\n      lineItems: this.state.lineItems.filter((item, i) => { return elementIndex !== i })\n    });\n  }\n\n  render = () => {\n    return (<EditableGrid formData={formData} lineItems={this.state.lineItems}\n      addHandler={this.handleAddLineItem} deleteHandler={this.handleRemoveLineItem} changeHandler={this.handleLineItemChange} />);\n  }\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}